name: Stage pipeline (Supabase migrate + Vercel deploy)

on:
  push:
    branches: [ stage ]
    paths-ignore:
      - 'src/lib/database.types.ts'
  workflow_dispatch:

concurrency:
  group: stage-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  migrate-and-deploy-stage:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Mostrar versiÃ³n CLI
        run: supabase --version

      - name: Aplicar migraciones a Stage
        env:
          SUPABASE_DB_URL_STAGE: ${{ secrets.SUPABASE_DB_URL_STAGE }}
        run: |
          set -e
          if [ -z "$SUPABASE_DB_URL_STAGE" ]; then
            echo "::error::Falta el secret SUPABASE_DB_URL_STAGE"; exit 1
          fi
          if echo "$SUPABASE_DB_URL_STAGE" | grep -qi "pool"; then
            echo "::warning::La URL parece de pooling; se recomienda non-pooling para migraciones."
          fi
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            supabase migration up --db-url "$SUPABASE_DB_URL_STAGE" --yes
          else
            echo "No hay migraciones en supabase/migrations; se omite."
          fi

      # Generar types (opcional). IMPORTANTE: mapear el token de Stage a SUPABASE_ACCESS_TOKEN
      - name: Generar types TS desde Supabase (Stage) (opcional)
        env:
          SUPABASE_PROJECT_REF_STAGE: ${{ secrets.SUPABASE_PROJECT_REF_STAGE }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN_STAGE }}   # ðŸ‘ˆ mapeo correcto
        run: |
          if [ -n "$SUPABASE_PROJECT_REF_STAGE" ] && [ -n "$SUPABASE_ACCESS_TOKEN" ]; then
            supabase gen types typescript --project-id "$SUPABASE_PROJECT_REF_STAGE" --schema public > src/lib/database.types.ts
            echo "Types generados (no se commitean en CI)."
          else
            echo "Secrets para gen types (Stage) no configurados; se omite."
          fi

      - name: Trigger Vercel Deploy (Stage)
        env:
          HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK_URL_STAGE }}
        run: |
          if [ -z "$HOOK" ]; then
            echo "::error::Falta VERCEL_DEPLOY_HOOK_URL_STAGE"; exit 1
          fi
          curl -s -X POST "$HOOK" && echo "Deploy hook enviado (Stage)."
